From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Fri, 26 May 2023 18:14:44 -0700
Subject: [PATCH] Code Generation

Currently includes generated key holder classes for types
used in the Registry Modification API

diff --git a/build.gradle.kts b/build.gradle.kts
index 97ba0ab8e268ba2f937143aaa5b68ea6f6cbfb88..435326b6918ecc8ab63f7ff59b2c92da1ee86da1 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -105,3 +105,15 @@ tasks.check {
     dependsOn(scanJar)
 }
 // Paper end
+// Paper start
+// TODO uncomment once paperweight is updated to include this task type
+// val scanJarForOldGeneratedCode = tasks.register("scanJarForOldGeneratedCode", io.papermc.paperweight.tasks.ScanJarForOldGeneratedCode::class) {
+//     mcVersion.set(providers.gradleProperty("mcVersion"))
+//     annotation.set("Lio/papermc/paper/generated/GeneratedFrom;")
+//     jarToScan.set(tasks.jar.flatMap { it.archiveFile })
+//     classpath.from(configurations.compileClasspath)
+// }
+// tasks.check {
+//     dependsOn(scanJarForOldGeneratedCode)
+// }
+// Paper end
diff --git a/src/main/java/io/papermc/paper/generated/GameEventKeys.java b/src/main/java/io/papermc/paper/generated/GameEventKeys.java
new file mode 100644
index 0000000000000000000000000000000000000000..9b3ee48996fe269fa9f1c21b46bde4b3b607799e
--- /dev/null
+++ b/src/main/java/io/papermc/paper/generated/GameEventKeys.java
@@ -0,0 +1,252 @@
+package io.papermc.paper.generated;
+
+import net.kyori.adventure.key.Key;
+
+/**
+ * Vanilla GameEvent keys
+ */
+@GeneratedFrom("1.19.4")
+public final class GameEventKeys {
+  /**
+   * GameEvent key: {@code minecraft:entity_mount}
+   */
+  public static final Key ENTITY_MOUNT = Key.key("entity_mount");
+
+  /**
+   * GameEvent key: {@code minecraft:block_activate}
+   */
+  public static final Key BLOCK_ACTIVATE = Key.key("block_activate");
+
+  /**
+   * GameEvent key: {@code minecraft:block_destroy}
+   */
+  public static final Key BLOCK_DESTROY = Key.key("block_destroy");
+
+  /**
+   * GameEvent key: {@code minecraft:container_close}
+   */
+  public static final Key CONTAINER_CLOSE = Key.key("container_close");
+
+  /**
+   * GameEvent key: {@code minecraft:note_block_play}
+   */
+  public static final Key NOTE_BLOCK_PLAY = Key.key("note_block_play");
+
+  /**
+   * GameEvent key: {@code minecraft:shear}
+   */
+  public static final Key SHEAR = Key.key("shear");
+
+  /**
+   * GameEvent key: {@code minecraft:lightning_strike}
+   */
+  public static final Key LIGHTNING_STRIKE = Key.key("lightning_strike");
+
+  /**
+   * GameEvent key: {@code minecraft:block_place}
+   */
+  public static final Key BLOCK_PLACE = Key.key("block_place");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_place}
+   */
+  public static final Key ENTITY_PLACE = Key.key("entity_place");
+
+  /**
+   * GameEvent key: {@code minecraft:prime_fuse}
+   */
+  public static final Key PRIME_FUSE = Key.key("prime_fuse");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_roar}
+   */
+  public static final Key ENTITY_ROAR = Key.key("entity_roar");
+
+  /**
+   * GameEvent key: {@code minecraft:hit_ground}
+   */
+  public static final Key HIT_GROUND = Key.key("hit_ground");
+
+  /**
+   * GameEvent key: {@code minecraft:drink}
+   */
+  public static final Key DRINK = Key.key("drink");
+
+  /**
+   * GameEvent key: {@code minecraft:item_interact_finish}
+   */
+  public static final Key ITEM_INTERACT_FINISH = Key.key("item_interact_finish");
+
+  /**
+   * GameEvent key: {@code minecraft:block_open}
+   */
+  public static final Key BLOCK_OPEN = Key.key("block_open");
+
+  /**
+   * GameEvent key: {@code minecraft:elytra_glide}
+   */
+  public static final Key ELYTRA_GLIDE = Key.key("elytra_glide");
+
+  /**
+   * GameEvent key: {@code minecraft:jukebox_play}
+   */
+  public static final Key JUKEBOX_PLAY = Key.key("jukebox_play");
+
+  /**
+   * GameEvent key: {@code minecraft:block_change}
+   */
+  public static final Key BLOCK_CHANGE = Key.key("block_change");
+
+  /**
+   * GameEvent key: {@code minecraft:instrument_play}
+   */
+  public static final Key INSTRUMENT_PLAY = Key.key("instrument_play");
+
+  /**
+   * GameEvent key: {@code minecraft:jukebox_stop_play}
+   */
+  public static final Key JUKEBOX_STOP_PLAY = Key.key("jukebox_stop_play");
+
+  /**
+   * GameEvent key: {@code minecraft:shriek}
+   */
+  public static final Key SHRIEK = Key.key("shriek");
+
+  /**
+   * GameEvent key: {@code minecraft:eat}
+   */
+  public static final Key EAT = Key.key("eat");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_damage}
+   */
+  public static final Key ENTITY_DAMAGE = Key.key("entity_damage");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_shake}
+   */
+  public static final Key ENTITY_SHAKE = Key.key("entity_shake");
+
+  /**
+   * GameEvent key: {@code minecraft:explode}
+   */
+  public static final Key EXPLODE = Key.key("explode");
+
+  /**
+   * GameEvent key: {@code minecraft:dispense_fail}
+   */
+  public static final Key DISPENSE_FAIL = Key.key("dispense_fail");
+
+  /**
+   * GameEvent key: {@code minecraft:piston_extend}
+   */
+  public static final Key PISTON_EXTEND = Key.key("piston_extend");
+
+  /**
+   * GameEvent key: {@code minecraft:teleport}
+   */
+  public static final Key TELEPORT = Key.key("teleport");
+
+  /**
+   * GameEvent key: {@code minecraft:block_attach}
+   */
+  public static final Key BLOCK_ATTACH = Key.key("block_attach");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_interact}
+   */
+  public static final Key ENTITY_INTERACT = Key.key("entity_interact");
+
+  /**
+   * GameEvent key: {@code minecraft:projectile_shoot}
+   */
+  public static final Key PROJECTILE_SHOOT = Key.key("projectile_shoot");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_die}
+   */
+  public static final Key ENTITY_DIE = Key.key("entity_die");
+
+  /**
+   * GameEvent key: {@code minecraft:entity_dismount}
+   */
+  public static final Key ENTITY_DISMOUNT = Key.key("entity_dismount");
+
+  /**
+   * GameEvent key: {@code minecraft:flap}
+   */
+  public static final Key FLAP = Key.key("flap");
+
+  /**
+   * GameEvent key: {@code minecraft:block_detach}
+   */
+  public static final Key BLOCK_DETACH = Key.key("block_detach");
+
+  /**
+   * GameEvent key: {@code minecraft:projectile_land}
+   */
+  public static final Key PROJECTILE_LAND = Key.key("projectile_land");
+
+  /**
+   * GameEvent key: {@code minecraft:sculk_sensor_tendrils_clicking}
+   */
+  public static final Key SCULK_SENSOR_TENDRILS_CLICKING = Key.key("sculk_sensor_tendrils_clicking");
+
+  /**
+   * GameEvent key: {@code minecraft:block_close}
+   */
+  public static final Key BLOCK_CLOSE = Key.key("block_close");
+
+  /**
+   * GameEvent key: {@code minecraft:block_deactivate}
+   */
+  public static final Key BLOCK_DEACTIVATE = Key.key("block_deactivate");
+
+  /**
+   * GameEvent key: {@code minecraft:item_interact_start}
+   */
+  public static final Key ITEM_INTERACT_START = Key.key("item_interact_start");
+
+  /**
+   * GameEvent key: {@code minecraft:splash}
+   */
+  public static final Key SPLASH = Key.key("splash");
+
+  /**
+   * GameEvent key: {@code minecraft:fluid_place}
+   */
+  public static final Key FLUID_PLACE = Key.key("fluid_place");
+
+  /**
+   * GameEvent key: {@code minecraft:container_open}
+   */
+  public static final Key CONTAINER_OPEN = Key.key("container_open");
+
+  /**
+   * GameEvent key: {@code minecraft:fluid_pickup}
+   */
+  public static final Key FLUID_PICKUP = Key.key("fluid_pickup");
+
+  /**
+   * GameEvent key: {@code minecraft:equip}
+   */
+  public static final Key EQUIP = Key.key("equip");
+
+  /**
+   * GameEvent key: {@code minecraft:step}
+   */
+  public static final Key STEP = Key.key("step");
+
+  /**
+   * GameEvent key: {@code minecraft:swim}
+   */
+  public static final Key SWIM = Key.key("swim");
+
+  /**
+   * GameEvent key: {@code minecraft:piston_contract}
+   */
+  public static final Key PISTON_CONTRACT = Key.key("piston_contract");
+
+  private GameEventKeys() {
+  }
+}
diff --git a/src/main/java/io/papermc/paper/generated/GeneratedFrom.java b/src/main/java/io/papermc/paper/generated/GeneratedFrom.java
new file mode 100644
index 0000000000000000000000000000000000000000..87325f75e258717fef01ff5fee4dde7ae6fd8cd2
--- /dev/null
+++ b/src/main/java/io/papermc/paper/generated/GeneratedFrom.java
@@ -0,0 +1,20 @@
+package io.papermc.paper.generated;
+
+import java.lang.annotation.Documented;
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+import org.jetbrains.annotations.ApiStatus;
+
+/**
+ * Used to mark classes which are generated from
+ * a specific version of minecraft.
+ */
+@Documented
+@Retention(RetentionPolicy.RUNTIME)
+@Target(ElementType.TYPE)
+@interface GeneratedFrom {
+
+    String value();
+}
