From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ysl3000 <yannicklamprecht@live.de>
Date: Sat, 24 Oct 2020 16:37:44 +0200
Subject: [PATCH] living entity allow attribute registration


diff --git a/src/main/java/net/minecraft/world/entity/ai/attributes/AttributeMap.java b/src/main/java/net/minecraft/world/entity/ai/attributes/AttributeMap.java
index 03561cb69c58e4ed8115a9e67df28d5df1f79bc4..dd1102d5291ef6f18e82400a6d8a0a376cc071e9 100644
--- a/src/main/java/net/minecraft/world/entity/ai/attributes/AttributeMap.java
+++ b/src/main/java/net/minecraft/world/entity/ai/attributes/AttributeMap.java
@@ -150,4 +150,12 @@ public class AttributeMap {
         }
 
     }
+
+    // Paper - start
+    public void registerAttribute(Attribute attributeBase) {
+        AttributeInstance attributeModifiable = new AttributeInstance(attributeBase, AttributeInstance::getAttribute);
+        attributes.put(attributeBase, attributeModifiable);
+    }
+    // Paper - end
+
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java b/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
index d39c4f4c40fe921d73569f21c18e25409ba19915..1c46f82905e76d4a7ada207c14830a0b1da45e9f 100644
--- a/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
+++ b/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
@@ -40,6 +40,14 @@ public class CraftAttributeMap implements Attributable {
         return (nms == null) ? null : new CraftAttributeInstance(nms, attribute);
     }
 
+    // Paper start
+    @Override
+    public void registerAttribute(final Attribute attribute) {
+        Preconditions.checkArgument(attribute != null, "attribute");
+        handle.registerAttribute(CraftAttributeMap.toMinecraft(CraftRegistry.getMinecraftRegistry().registryOrThrow(net.minecraft.core.registries.Registries.ATTRIBUTE), attribute));
+    }
+    // Paper end
+
     public static net.minecraft.world.entity.ai.attributes.Attribute toMinecraft(net.minecraft.core.Registry<net.minecraft.world.entity.ai.attributes.Attribute> registry, Attribute attribute) {
         return registry.get(CraftNamespacedKey.toMinecraft(attribute.getKey()));
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
index b1494cbc612cdfa99b385194fe9207e2df88c946..55d6f1a635978e64ca74a772e83499dd2541b398 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
@@ -702,6 +702,13 @@ public class CraftLivingEntity extends CraftEntity implements LivingEntity {
         return this.getHandle().craftAttributes.getAttribute(attribute);
     }
 
+    // Paper start
+    @Override
+    public void registerAttribute(Attribute attribute) {
+        getHandle().craftAttributes.registerAttribute(attribute);
+    }
+    // Paper end
+
     @Override
     public void setAI(boolean ai) {
         if (this.getHandle() instanceof Mob) {
